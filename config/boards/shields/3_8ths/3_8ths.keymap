/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/led/led.h>


/ {
	conditional_layers {
		compatible = "zmk,conditional-layers";
        tri_layer {
			if-layers = <1 2>;
			then-layer = <3>;
        };
	};
};


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// -----------------------------------------------------------------------------------------
				// |   Q   |  W   |  E   |  R   |  T   |   Y   |   U   |  I  |  O   |  P   |
				// |   A   |  S   |  D   |  F   |  G   |   H   |   J   |  K  |  L   |      |
				// | SHIFT |  Z   |  X   |  C   |  V   |   B   |   N   |  M  |      |      |
				// | CTRL  | LGUI | LALT | RAIS | LOWR |  SPACE    |  ENTER  | BSPC |  DEL |
			bindings = <
				&kp Q     &kp W    &kp E    &kp R &kp T &kp Y     &kp U &kp I     &kp O    &kp P
				&kp A     &kp S    &kp D    &kp F &kp G &kp H     &kp J &kp K     &kp L    &none
				&kp LSHFT &kp Z    &kp X    &kp C &kp V &kp B     &kp N &kp M     &none    &none
				&kp LCTRL &kp LGUI &kp LALT &mo 2 &mo 1 &kp SPACE &none &kp ENTER &kp BSPC &kp DEL
			>;
		};

		lower {
			bindings = <
				&kp DEL  &kp N1 &kp N2 &kp N3 &kp MINUS &none     &none &none  &none  &none
				&kp CAPS &kp N4 &kp N5 &kp N6 &kp EQUAL &kp APOS  &none &none  &none  &none
				&trans   &kp N7 &kp N8 &kp N9 &kp N0    &kp DOT   &none &none  &none  &none
				&trans   &trans &trans &trans &trans    &kp ENTER &none &trans &trans &trans
			>;
		};

		raise {
			bindings = <
				&kp BSPC &kp HOME  &kp UP   &kp END   &kp SEMI &none    &none &none  &none  &none
				&kp TAB  &kp LEFT  &kp DOWN &kp RIGHT &kp FSLH &kp BSLH &none &none  &none  &none
				&trans   &kp COMMA &kp DOT  &kp LBKT  &kp RBKT &none    &none &none  &none  &none
				&trans   &trans    &trans   &trans    &trans   &trans   &none &trans &trans &trans
			>;
		};
		
		control {
			bindings = <
				&kp ESC   &kp F1 &kp F2 &kp F3 &kp F10 &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_SAI &rgb_ug RGB_TOG
				&kp GRAVE &kp F4 &kp F5 &kp F6 &kp F11 &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_SAD &rgb_ug RGB_EFF
				&trans    &kp F7 &kp F8 &kp F9 &kp F12 &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_CLR      &out OUT_TOG    &ext_power EP_TOG           
				&trans    &trans &trans &trans &trans  &trans          &none           &trans          &trans          &trans
			>;
		};
	};
};

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

&spi1 {
   compatible = "nordic,nrf-spim";
   status = "okay";
   mosi-pin = <6>;
   // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
   sck-pin = <5>;
   miso-pin = <7>;

   led_strip: ws2812@0 {
      compatible = "worldsemi,ws2812-spi";
      label = "WS2812";

      /* SPI */
      reg = <0>; /* ignored, but necessary for SPI bindings */
      spi-max-frequency = <4000000>;

      /* WS2812 */
      chain-length = <39>; /* arbitrary; change at will */
      spi-one-frame = <0x70>;
      spi-zero-frame = <0x40>;
      color-mapping = <LED_COLOR_ID_GREEN
				 	   LED_COLOR_ID_RED
					   LED_COLOR_ID_BLUE>;
   };
};

/ {
   chosen {
      zmk,underglow = &led_strip;
   };
};

/*
 * Temporarily here because nice nano v2 spi is not defined on ZMk YET
 */

/ {
	ext-power {control-gpios = <&gpio1 6 GPIO_ACTIVE_HIGH>; };
};